{
  "address": "0xb56752a940A69750a10bE6920C8153dc6c12225f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeCollector",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_airdropFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "airdropIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "name": "AirdropCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "airdropIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "recipientCount",
          "type": "uint256"
        }
      ],
      "name": "AirdropExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "AirdropFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldCollector",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newCollector",
          "type": "address"
        }
      ],
      "name": "FeeCollectorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "airdropFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "airdropHistory",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "distributedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "recipientCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "executeAirdrop",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeCollector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getAirdropCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getAirdropInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "distributedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "recipientCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "completed",
              "type": "bool"
            }
          ],
          "internalType": "struct AirdropManager.AirdropInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "rescueETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "rescueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newFee",
          "type": "uint256"
        }
      ],
      "name": "updateAirdropFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newCollector",
          "type": "address"
        }
      ],
      "name": "updateFeeCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8db34acb6c9b65a86d2ac1d065055525b1051ef43386a87d00707ecc74ba66c5",
  "receipt": {
    "to": null,
    "from": "0xb799B0857C48f96E24e4295FD961043856b847eB",
    "contractAddress": "0xb56752a940A69750a10bE6920C8153dc6c12225f",
    "transactionIndex": 155,
    "gasUsed": "931723",
    "logsBloom": "0x
    "blockHash": "0x36aa80fd89f205d6402281753e835ce11e8dd4e9f06a6296b7567ce52bc658ac",
    "transactionHash": "0x8db34acb6c9b65a86d2ac1d065055525b1051ef43386a87d00707ecc74ba66c5",
    "logs": [
      {
        "transactionIndex": 155,
        "blockNumber": 8546218,
        "transactionHash": "0x8db34acb6c9b65a86d2ac1d065055525b1051ef43386a87d00707ecc74ba66c5",
        "address": "0xb56752a940A69750a10bE6920C8153dc6c12225f",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b799b0857c48f96e24e4295fd961043856b847eb"
        ],
        "data": "0x",
        "logIndex": 312,
        "blockHash": "0x36aa80fd89f205d6402281753e835ce11e8dd4e9f06a6296b7567ce52bc658ac"
      }
    ],
    "blockNumber": 8546218,
    "cumulativeGasUsed": "16867403",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xb799B0857C48f96E24e4295FD961043856b847eB",
    "100000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "64dd33090a4168bf8cb71a65e0a50b23",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_airdropFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"airdropIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"AirdropCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"airdropIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recipientCount\",\"type\":\"uint256\"}],\"name\":\"AirdropExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"AirdropFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldCollector\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdropFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"airdropHistory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"distributedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recipientCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"executeAirdrop\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getAirdropCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getAirdropInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"distributedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recipientCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"internalType\":\"struct AirdropManager.AirdropInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"updateAirdropFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCollector\",\"type\":\"address\"}],\"name\":\"updateFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Manages token airdrops for newly created tokens\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"executeAirdrop(address,address[],uint256[])\":{\"details\":\"Execute an airdrop to multiple recipients\",\"params\":{\"amounts\":\"Array of amounts to distribute to each recipient\",\"recipients\":\"Array of recipient addresses\",\"token\":\"The token address to airdrop\"}},\"getAirdropCount(address)\":{\"details\":\"Get total number of airdrops for a token\"},\"getAirdropInfo(address,uint256)\":{\"details\":\"Get airdrop details by index\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"rescueETH(address,uint256)\":{\"details\":\"Emergency function to rescue ETH sent to this contract by mistake\"},\"rescueTokens(address,address,uint256)\":{\"details\":\"Emergency function to rescue ERC20 tokens sent to this contract by mistake\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateAirdropFee(uint256)\":{\"details\":\"Admin function to update the airdrop fee\"},\"updateFeeCollector(address)\":{\"details\":\"Admin function to update the fee collector address\"}},\"title\":\"AirdropManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/Airdrop.sol\":\"AirdropManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/extensions/Airdrop.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"../interfaces/IToken.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title AirdropManager\\r\\n * @dev Manages token airdrops for newly created tokens\\r\\n */\\r\\ncontract AirdropManager is Ownable {\\r\\n    address public feeCollector;\\r\\n    uint256 public airdropFee;\\r\\n    \\r\\n    // Track airdrop information\\r\\n    struct AirdropInfo {\\r\\n        address token;\\r\\n        uint256 totalAmount;\\r\\n        uint256 distributedAmount;\\r\\n        uint256 recipientCount;\\r\\n        uint256 timestamp;\\r\\n        bool completed;\\r\\n    }\\r\\n    \\r\\n    // Mapping to track airdrop history by token address\\r\\n    mapping(address => AirdropInfo[]) public airdropHistory;\\r\\n    \\r\\n    // Events\\r\\n    event AirdropExecuted(\\r\\n        address indexed token,\\r\\n        uint256 indexed airdropIndex,\\r\\n        uint256 totalAmount,\\r\\n        uint256 recipientCount\\r\\n    );\\r\\n    event AirdropCompleted(\\r\\n        address indexed token,\\r\\n        uint256 indexed airdropIndex,\\r\\n        uint256 totalAmount\\r\\n    );\\r\\n    event FeeCollectorUpdated(address indexed oldCollector, address indexed newCollector);\\r\\n    event AirdropFeeUpdated(uint256 oldFee, uint256 newFee);\\r\\n    \\r\\n    constructor(address _feeCollector, uint256 _airdropFee) Ownable(msg.sender) {\\r\\n        require(_feeCollector != address(0), \\\"Invalid fee collector\\\");\\r\\n        feeCollector = _feeCollector;\\r\\n        airdropFee = _airdropFee;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Execute an airdrop to multiple recipients\\r\\n     * @param token The token address to airdrop\\r\\n     * @param recipients Array of recipient addresses\\r\\n     * @param amounts Array of amounts to distribute to each recipient\\r\\n     */\\r\\n    function executeAirdrop(\\r\\n        address token,\\r\\n        address[] calldata recipients,\\r\\n        uint256[] calldata amounts\\r\\n    ) external payable {\\r\\n        require(msg.value >= airdropFee, \\\"Insufficient fee\\\");\\r\\n        require(token != address(0), \\\"Invalid token address\\\");\\r\\n        require(recipients.length == amounts.length, \\\"Arrays length mismatch\\\");\\r\\n        require(recipients.length > 0, \\\"Empty recipients list\\\");\\r\\n        require(recipients.length <= 500, \\\"Too many recipients at once\\\");\\r\\n        \\r\\n        IERC20 tokenContract = IERC20(token);\\r\\n        \\r\\n        // Calculate total amount to distribute\\r\\n        uint256 totalAmount = 0;\\r\\n        for (uint256 i = 0; i < amounts.length; i++) {\\r\\n            totalAmount += amounts[i];\\r\\n        }\\r\\n        \\r\\n        require(totalAmount > 0, \\\"No tokens to distribute\\\");\\r\\n        \\r\\n        // Transfer tokens from sender to this contract\\r\\n        require(\\r\\n            tokenContract.transferFrom(msg.sender, address(this), totalAmount),\\r\\n            \\\"Token transfer failed\\\"\\r\\n        );\\r\\n        \\r\\n        // Create airdrop record\\r\\n        uint256 airdropIndex = airdropHistory[token].length;\\r\\n        airdropHistory[token].push(\\r\\n            AirdropInfo({\\r\\n                token: token,\\r\\n                totalAmount: totalAmount,\\r\\n                distributedAmount: 0,\\r\\n                recipientCount: recipients.length,\\r\\n                timestamp: block.timestamp,\\r\\n                completed: false\\r\\n            })\\r\\n        );\\r\\n        \\r\\n        // Distribute tokens batch by batch\\r\\n        _distributeTokens(token, airdropIndex, recipients, amounts);\\r\\n        \\r\\n        // Pay fee to collector\\r\\n        (bool sent, ) = payable(feeCollector).call{value: airdropFee}(\\\"\\\");\\r\\n        require(sent, \\\"Fee transfer failed\\\");\\r\\n        \\r\\n        // Refund excess fee\\r\\n        if (msg.value > airdropFee) {\\r\\n            (bool refundSent, ) = payable(msg.sender).call{value: msg.value - airdropFee}(\\\"\\\");\\r\\n            require(refundSent, \\\"Refund failed\\\");\\r\\n        }\\r\\n        \\r\\n        emit AirdropExecuted(token, airdropIndex, totalAmount, recipients.length);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Internal function to distribute tokens in batches\\r\\n     */\\r\\n    function _distributeTokens(\\r\\n        address token,\\r\\n        uint256 airdropIndex,\\r\\n        address[] calldata recipients,\\r\\n        uint256[] calldata amounts\\r\\n    ) internal {\\r\\n        IERC20 tokenContract = IERC20(token);\\r\\n        AirdropInfo storage airdropInfo = airdropHistory[token][airdropIndex];\\r\\n        \\r\\n        // Distribute tokens to recipients\\r\\n        for (uint256 i = 0; i < recipients.length; i++) {\\r\\n            if (recipients[i] != address(0) && amounts[i] > 0) {\\r\\n                require(\\r\\n                    tokenContract.transfer(recipients[i], amounts[i]),\\r\\n                    \\\"Token transfer failed\\\"\\r\\n                );\\r\\n                airdropInfo.distributedAmount += amounts[i];\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        // Mark airdrop as completed\\r\\n        airdropInfo.completed = true;\\r\\n        \\r\\n        emit AirdropCompleted(token, airdropIndex, airdropInfo.distributedAmount);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Get total number of airdrops for a token\\r\\n     */\\r\\n    function getAirdropCount(address token) external view returns (uint256) {\\r\\n        return airdropHistory[token].length;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Get airdrop details by index\\r\\n     */\\r\\n    function getAirdropInfo(\\r\\n        address token,\\r\\n        uint256 index\\r\\n    ) external view returns (AirdropInfo memory) {\\r\\n        require(index < airdropHistory[token].length, \\\"Invalid airdrop index\\\");\\r\\n        return airdropHistory[token][index];\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Admin function to update the fee collector address\\r\\n     */\\r\\n    function updateFeeCollector(address _newCollector) external onlyOwner {\\r\\n        require(_newCollector != address(0), \\\"Invalid collector address\\\");\\r\\n        address oldCollector = feeCollector;\\r\\n        feeCollector = _newCollector;\\r\\n        emit FeeCollectorUpdated(oldCollector, _newCollector);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Admin function to update the airdrop fee\\r\\n     */\\r\\n    function updateAirdropFee(uint256 _newFee) external onlyOwner {\\r\\n        uint256 oldFee = airdropFee;\\r\\n        airdropFee = _newFee;\\r\\n        emit AirdropFeeUpdated(oldFee, _newFee);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Emergency function to rescue ERC20 tokens sent to this contract by mistake\\r\\n     */\\r\\n    function rescueTokens(\\r\\n        address tokenAddress,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        IERC20(tokenAddress).transfer(recipient, amount);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Emergency function to rescue ETH sent to this contract by mistake\\r\\n     */\\r\\n    function rescueETH(address payable recipient, uint256 amount) external onlyOwner {\\r\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\r\\n        require(success, \\\"ETH transfer failed\\\");\\r\\n    }\\r\\n}\",\"keccak256\":\"0x21e03c184093f7cf49ffebe77a76e134b0c1a320804aed938a9717a85e4f4c6f\",\"license\":\"MIT\"},\"contracts/interfaces/IToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\ninterface IToken {\\r\\n    function enableTrading() external;\\r\\n    function setAntiBotEnabled(bool enabled) external;\\r\\n    function setMaxTxAmount(uint256 amount) external;\\r\\n    function setMaxWalletAmount(uint256 amount) external;\\r\\n    function excludeFromLimits(address account, bool excluded) external;\\r\\n    function completeInitialDistribution() external;\\r\\n}\",\"keccak256\":\"0x0a2dfcc5916da4dc74408b1c2eb2eddb9d5ba226a9c62cc478a96aa911dd1bc1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b60003560e01c8063099a04e514610c1757806356d6f445146105d0578063715018a61461057757806379ce11d5146104375780638da5cb5b1461040e57806390a11403146103ba578063986244551461039c578063a18f14021461030b578063c415b95c146102e2578063cea9d26f14610228578063d2c35ce814610173578063e43b9c81146101395763f2fde38b146100ab57600080fd5b34610134576020366003190112610134576100c4610c9c565b6100cc610d15565b6001600160a01b0390811690811561011b57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b34610134576020366003190112610134576001600160a01b0361015a610c9c565b1660005260036020526020604060002054604051908152f35b346101345760203660031901126101345761018c610c9c565b610194610d15565b6001600160a01b039081169081156101e357600154826001600160601b0360a01b821617600155167f5d16ad41baeb009cd23eb8f6c7cde5c2e0cd5acf4a33926ab488875c37c37f38600080a3005b60405162461bcd60e51b815260206004820152601960248201527f496e76616c696420636f6c6c6563746f722061646472657373000000000000006044820152606490fd5b3461013457606036600319011261013457610241610c9c565b6001600160a01b039060243582811681036101345760209161029c91610265610d15565b60405163a9059cbb60e01b81526001600160a01b039091166004820152604480356024830152909485938492600092918491820190565b0393165af180156102d6576102ad57005b6102cd9060203d81116102cf575b6102c58183610d89565b810190610dab565b005b503d6102bb565b6040513d6000823e3d90fd5b34610134576000366003190112610134576001546040516001600160a01b039091168152602090f35b3461013457604036600319011261013457610324610c9c565b6024359060018060a01b038091166000526003602052604060002080548310156101345760c09261035491610ce3565b509081541690600181015490600281015460038201549060ff6005600485015494015416936040519586526020860152604085015260608401526080830152151560a0820152f35b34610134576000366003190112610134576020600254604051908152f35b34610134576020366003190112610134577fd7dc7cfe3ec7befe27bc6b950d69b22d87525e53b91f6fa6c451f8289bc08e0360406004356103f9610d15565b600254908060025582519182526020820152a1005b34610134576000366003190112610134576000546040516001600160a01b039091168152602090f35b3461013457604036600319011261013457610450610c9c565b6040516024359161046082610d6d565b60008252600060a06020938285820152826040820152826060820152826080820152015260018060a01b03809116806000526003835260406000205484101561053a5760c0936104bb91600052600384526040600020610ce3565b50604051916104c983610d6d565b81541692838352600182015490808401918252600283015490604085019182526003840154926060860193845260a060ff600560048801549760808a0198895201541696019515158652604051968752519086015251604085015251606084015251608083015251151560a0820152f35b60405162461bcd60e51b8152600481018490526015602482015274092dcecc2d8d2c840c2d2e4c8e4dee040d2dcc8caf605b1b6044820152606490fd5b3461013457600036600319011261013457610590610d15565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b6060366003190112610134576105e4610c9c565b67ffffffffffffffff60243581811161013457610605903690600401610cb2565b92909160443590811161013457610620903690600401610cb2565b93906002543410610bdf576001600160a01b03831615610ba257848203610b64578115610b27576101f48211610ae25760009360005b868110610abd57508415610a78576040516323b872dd60e01b81523360048201523060248201526044810186905260208160648160006001600160a01b038a165af180156102d6576106b091600091610a59575b50610dc3565b60018060a01b0384166000526003602052604060002095865496604051906106d782610d6d565b6001600160a01b0387168252602082018890526000604083018190526060830187905242608084015260a083015268010000000000000000891015610a43578861072691600182018155610ce3565b610a2d579060a060058a96959493600180841b038451166001600160601b03841b8254161781556020840151600182015560408401516002820155606084015160038201556080840151600482015501910151151560ff8019835416911617905560018060a01b03861660005260036020526107a6846040600020610ce3565b509260005b8681106109175750505060058201805460ff1916600117905550600201546040519081526001600160a01b038416907f6a0033ac0682ef839e0ad0acc9519a27c146dc2c259150e818aa28f5c4e46d6790602090a3600080808060018060a01b0360015416600254905af161081e610e07565b50156108dc5760025480341161086b575b507f855c796d7cac7716cf174c5fc400aba2d821dab10569bfaa9f5c3c37eded6ef5916040918251948552602085015260018060a01b031692a3005b34033481116108c657600080808093335af1610885610e07565b5015610891578461082f565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b93945091929091906001600160a01b0361093a610935838988610d50565b610e47565b16151580610a19575b61095c575b61095190610d41565b9088949392916107ab565b8060206109706109356109aa948a89610d50565b61097b838787610d50565b60405163a9059cbb60e01b81526001600160a01b03909216600483015235602482015292839081906044820190565b038160006001600160a01b038d165af19182156102d657610951926109d6916000916109fa5750610dc3565b6109e1818585610d50565b356109f160028801918254610d60565b90559050610948565b610a13915060203d6020116102cf576102c58183610d89565b8c6106aa565b50610a25818484610d50565b351515610943565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610a72915060203d6020116102cf576102c58183610d89565b886106aa565b60405162461bcd60e51b815260206004820152601760248201527f4e6f20746f6b656e7320746f20646973747269627574650000000000000000006044820152606490fd5b94610ad7610add91610ad0888a87610d50565b3590610d60565b95610d41565b610656565b60405162461bcd60e51b815260206004820152601b60248201527f546f6f206d616e7920726563697069656e7473206174206f6e636500000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526015602482015274115b5c1d1e481c9958da5c1a595b9d1cc81b1a5cdd605a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606490fd5b60405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f496e73756666696369656e742066656560801b6044820152606490fd5b34610134576040366003190112610134576004356001600160a01b0381169081900361013457600080808093610c4b610d15565b602435905af1610c59610e07565b5015610c6157005b60405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b600435906001600160a01b038216820361013457565b9181601f840112156101345782359167ffffffffffffffff8311610134576020808501948460051b01011161013457565b8054821015610cff576000526006602060002091020190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b03163303610d2957565b60405163118cdaa760e01b8152336004820152602490fd5b60001981146108c65760010190565b9190811015610cff5760051b0190565b919082018092116108c657565b60c0810190811067ffffffffffffffff821117610a4357604052565b90601f8019910116810190811067ffffffffffffffff821117610a4357604052565b90816020910312610134575180151581036101345790565b15610dca57565b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b3d15610e42573d9067ffffffffffffffff8211610a435760405191610e36601f8201601f191660200184610d89565b82523d6000602084013e565b606090565b356001600160a01b0381168103610134579056fea2646970667358221220b768c3a66760c69a9ab5ff11b1a99f12f7dbce5c38054265520c73b977583c4b64736f6c63430008140033",
  "devdoc": {
    "details": "Manages token airdrops for newly created tokens",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "executeAirdrop(address,address[],uint256[])": {
        "details": "Execute an airdrop to multiple recipients",
        "params": {
          "amounts": "Array of amounts to distribute to each recipient",
          "recipients": "Array of recipient addresses",
          "token": "The token address to airdrop"
        }
      },
      "getAirdropCount(address)": {
        "details": "Get total number of airdrops for a token"
      },
      "getAirdropInfo(address,uint256)": {
        "details": "Get airdrop details by index"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "rescueETH(address,uint256)": {
        "details": "Emergency function to rescue ETH sent to this contract by mistake"
      },
      "rescueTokens(address,address,uint256)": {
        "details": "Emergency function to rescue ERC20 tokens sent to this contract by mistake"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateAirdropFee(uint256)": {
        "details": "Admin function to update the airdrop fee"
      },
      "updateFeeCollector(address)": {
        "details": "Admin function to update the fee collector address"
      }
    },
    "title": "AirdropManager",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/extensions/Airdrop.sol:AirdropManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 265,
        "contract": "contracts/extensions/Airdrop.sol:AirdropManager",
        "label": "feeCollector",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 267,
        "contract": "contracts/extensions/Airdrop.sol:AirdropManager",
        "label": "airdropFee",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 286,
        "contract": "contracts/extensions/Airdrop.sol:AirdropManager",
        "label": "airdropHistory",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_struct(AirdropInfo)280_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(AirdropInfo)280_storage)dyn_storage": {
        "base": "t_struct(AirdropInfo)280_storage",
        "encoding": "dynamic_array",
        "label": "struct AirdropManager.AirdropInfo[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(AirdropInfo)280_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct AirdropManager.AirdropInfo[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(AirdropInfo)280_storage)dyn_storage"
      },
      "t_struct(AirdropInfo)280_storage": {
        "encoding": "inplace",
        "label": "struct AirdropManager.AirdropInfo",
        "members": [
          {
            "astId": 269,
            "contract": "contracts/extensions/Airdrop.sol:AirdropManager",
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 271,
            "contract": "contracts/extensions/Airdrop.sol:AirdropManager",
            "label": "totalAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 273,
            "contract": "contracts/extensions/Airdrop.sol:AirdropManager",
            "label": "distributedAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 275,
            "contract": "contracts/extensions/Airdrop.sol:AirdropManager",
            "label": "recipientCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 277,
            "contract": "contracts/extensions/Airdrop.sol:AirdropManager",
            "label": "timestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 279,
            "contract": "contracts/extensions/Airdrop.sol:AirdropManager",
            "label": "completed",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}