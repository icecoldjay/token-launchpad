{
  "address": "0x0CBc9B63D6A03d450E5d5aB87CC610e9cfa12D6B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeCollector",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_creationFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "CreationFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldCollector",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newCollector",
          "type": "address"
        }
      ],
      "name": "FeeCollectorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "TokenCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "initialHolders",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "initialAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "liquidityManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "launchManager",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "launchWithLiquidity",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "initialTokenOwner",
          "type": "address"
        }
      ],
      "name": "createToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "creatorTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeCollector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "getCreatorTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "getCreatorTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newFee",
          "type": "uint256"
        }
      ],
      "name": "updateCreationFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newCollector",
          "type": "address"
        }
      ],
      "name": "updateFeeCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8a94294eaa7675db7fa2299e4639a8c0b766f663fec43d6e89e51c3974a195ed",
  "receipt": {
    "to": null,
    "from": "0xb799B0857C48f96E24e4295FD961043856b847eB",
    "contractAddress": "0x0CBc9B63D6A03d450E5d5aB87CC610e9cfa12D6B",
    "transactionIndex": 79,
    "gasUsed": "2070745",
    "logsBloom": "0x
    "blockHash": "0xc9974240bb82993568d5b45259e8a483bf4f568ed0703076983265f3116a5ecf",
    "transactionHash": "0x8a94294eaa7675db7fa2299e4639a8c0b766f663fec43d6e89e51c3974a195ed",
    "logs": [
      {
        "transactionIndex": 79,
        "blockNumber": 8234503,
        "transactionHash": "0x8a94294eaa7675db7fa2299e4639a8c0b766f663fec43d6e89e51c3974a195ed",
        "address": "0x0CBc9B63D6A03d450E5d5aB87CC610e9cfa12D6B",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b799b0857c48f96e24e4295fd961043856b847eb"
        ],
        "data": "0x",
        "logIndex": 116,
        "blockHash": "0xc9974240bb82993568d5b45259e8a483bf4f568ed0703076983265f3116a5ecf"
      }
    ],
    "blockNumber": 8234503,
    "cumulativeGasUsed": "13646507",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0000000000000000000000000000000000000000",
    "100000000000000"
  ],
  "numDeployments": 18,
  "solcInputHash": "0f86bc035ae63563b20d782c1f98d354",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_creationFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"CreationFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldCollector\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"TokenCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"initialHolders\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"initialAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"liquidityManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchManager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"launchWithLiquidity\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"initialTokenOwner\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"creatorTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"getCreatorTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"getCreatorTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"updateCreationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCollector\",\"type\":\"address\"}],\"name\":\"updateFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/TokenFactory.sol\":\"TokenFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/core/TokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"./TokenTemplate.sol\\\";\\r\\nimport \\\"../interfaces/IToken.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TokenFactory is Ownable {\\r\\n    address public feeCollector;\\r\\n    uint256 public creationFee;\\r\\n\\r\\n    mapping(address => address[]) public creatorTokens;\\r\\n    address[] public allTokens;\\r\\n\\r\\n    event TokenCreated(address indexed creator, address tokenAddress);\\r\\n    event FeeCollectorUpdated(\\r\\n        address indexed oldCollector,\\r\\n        address indexed newCollector\\r\\n    );\\r\\n    event CreationFeeUpdated(uint256 oldFee, uint256 newFee);\\r\\n\\r\\n    constructor(\\r\\n        address _feeCollector,\\r\\n        uint256 _creationFee\\r\\n    ) Ownable(msg.sender) {\\r\\n        // Use OZ Ownable's constructor implicitly\\r\\n        feeCollector = _feeCollector;\\r\\n        creationFee = _creationFee;\\r\\n    }\\r\\n\\r\\n    function createToken(\\r\\n        string memory name,\\r\\n        string memory symbol,\\r\\n        uint256 totalSupply,\\r\\n        address[] memory initialHolders,\\r\\n        uint256[] memory initialAmounts,\\r\\n        address liquidityManager,\\r\\n        address launchManager,\\r\\n        bool launchWithLiquidity,\\r\\n        address initialTokenOwner // Add this parameter\\r\\n    ) external payable returns (address) {\\r\\n        require(msg.value >= creationFee, \\\"Insufficient fee\\\");\\r\\n        require(\\r\\n            initialHolders.length == initialAmounts.length,\\r\\n            \\\"Holders and amounts mismatch\\\"\\r\\n        );\\r\\n\\r\\n        // Create new token contract\\r\\n        TokenTemplate token = new TokenTemplate(\\r\\n            name,\\r\\n            symbol,\\r\\n            totalSupply,\\r\\n            initialTokenOwner,\\r\\n            initialHolders,\\r\\n            initialAmounts,\\r\\n            liquidityManager,\\r\\n            launchManager,\\r\\n            launchWithLiquidity\\r\\n        );\\r\\n\\r\\n        // Record token creation\\r\\n        creatorTokens[msg.sender].push(address(token));\\r\\n        allTokens.push(address(token));\\r\\n\\r\\n        // Pay fee to collector\\r\\n        (bool sent, ) = payable(feeCollector).call{value: creationFee}(\\\"\\\");\\r\\n        require(sent, \\\"Fee transfer failed\\\");\\r\\n\\r\\n        // Refund excess fee\\r\\n        if (msg.value > creationFee) {\\r\\n            (bool refundSent, ) = payable(msg.sender).call{\\r\\n                value: msg.value - creationFee\\r\\n            }(\\\"\\\");\\r\\n            require(refundSent, \\\"Refund failed\\\");\\r\\n        }\\r\\n\\r\\n        emit TokenCreated(msg.sender, address(token));\\r\\n        return address(token);\\r\\n    }\\r\\n\\r\\n    function getCreatorTokens(\\r\\n        address creator\\r\\n    ) external view returns (address[] memory) {\\r\\n        return creatorTokens[creator];\\r\\n    }\\r\\n\\r\\n    function getCreatorTokenCount(\\r\\n        address creator\\r\\n    ) external view returns (uint256) {\\r\\n        return creatorTokens[creator].length;\\r\\n    }\\r\\n\\r\\n    function getTotalTokenCount() external view returns (uint256) {\\r\\n        return allTokens.length;\\r\\n    }\\r\\n\\r\\n    function updateFeeCollector(address _newCollector) external onlyOwner {\\r\\n        require(_newCollector != address(0), \\\"Invalid collector address\\\");\\r\\n        address oldCollector = feeCollector;\\r\\n        feeCollector = _newCollector;\\r\\n        emit FeeCollectorUpdated(oldCollector, _newCollector);\\r\\n    }\\r\\n\\r\\n    function updateCreationFee(uint256 _newFee) external onlyOwner {\\r\\n        uint256 oldFee = creationFee;\\r\\n        creationFee = _newFee;\\r\\n        emit CreationFeeUpdated(oldFee, _newFee);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x82b86c587eee5b4ed554b5514a4782a6bc05975c8d3c5853d7248f53bd068a08\",\"license\":\"MIT\"},\"contracts/core/TokenTemplate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TokenTemplate is ERC20, Ownable {\\r\\n    bool public tradingEnabled;\\r\\n    uint256 public launchTime;\\r\\n    uint256 public launchBlock;\\r\\n\\r\\n    // Flag to track initial distribution status\\r\\n    bool private _initialDistributionComplete;\\r\\n\\r\\n    // Store total tokens to be distributed\\r\\n    uint256 public tokensToDistribute;\\r\\n\\r\\n    // Simple whitelist for liquidity manager\\r\\n    mapping(address => bool) public isWhitelisted;\\r\\n    event TradingEnabled(uint256 timestamp);\\r\\n    event InitialDistributionComplete();\\r\\n    event AddressWhitelisted(address indexed account, bool status);\\r\\n    event LiquidityApproved(address indexed liquidityManager, uint256 amount);\\r\\n    event LaunchManagerApproved(address indexed launchManager, uint256 amount);\\r\\n\\r\\n    constructor(\\r\\n        string memory name,\\r\\n        string memory symbol,\\r\\n        uint256 totalSupply,\\r\\n        address _initialOwner,\\r\\n        address[] memory initialHolders,\\r\\n        uint256[] memory initialAmounts,\\r\\n        address liquidityManager,\\r\\n        address launchManager,\\r\\n        bool launchWithLiquidity \\r\\n    ) ERC20(name, symbol) Ownable(_initialOwner) {\\r\\n        require(\\r\\n            initialHolders.length == initialAmounts.length,\\r\\n            \\\"Arrays length mismatch\\\"\\r\\n        );\\r\\n        require(\\r\\n            initialHolders.length <= 10,\\r\\n            \\\"Maximum 10 initial holders allowed\\\"\\r\\n        );\\r\\n\\r\\n        // Calculate tokens to be distributed\\r\\n        tokensToDistribute = 0;\\r\\n        for (uint i = 0; i < initialHolders.length; i++) {\\r\\n            if (initialHolders[i] != address(0) && initialAmounts[i] > 0) {\\r\\n                tokensToDistribute += initialAmounts[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // Make sure we don't exceed total supply\\r\\n        require(\\r\\n            tokensToDistribute <= totalSupply,\\r\\n            \\\"Distribution exceeds total supply\\\"\\r\\n        );\\r\\n\\r\\n        // Mint all tokens to the initial owner\\r\\n        _mint(_initialOwner, totalSupply);\\r\\n\\r\\n        // Whitelist the owner by default\\r\\n        isWhitelisted[owner()] = true;\\r\\n\\r\\n        // Pre-approve the launch manager to spend tokens for distribution\\r\\n        // Approval strategy based on the launch type\\r\\n        if (launchManager != address(0)) {\\r\\n            if (launchWithLiquidity) {\\r\\n                // For launches that include liquidity: approve all tokens\\r\\n                _approve(_initialOwner, launchManager, totalSupply);\\r\\n                emit LaunchManagerApproved(launchManager, totalSupply);\\r\\n            } else {\\r\\n                // For distribution-only launches: approve only tokens to distribute\\r\\n                _approve(_initialOwner, launchManager, tokensToDistribute);\\r\\n                emit LaunchManagerApproved(launchManager, tokensToDistribute);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // Approve liquidity manager for liquidity provision with remaining tokens\\r\\n        if (liquidityManager != address(0)) {\\r\\n            // Calculate remaining tokens for liquidity\\r\\n            uint256 remainingTokens = totalSupply - tokensToDistribute;\\r\\n\\r\\n            // Approve for liquidity provision with remaining tokens\\r\\n            _approve(_initialOwner, liquidityManager, remainingTokens);\\r\\n            emit LiquidityApproved(liquidityManager, remainingTokens);\\r\\n\\r\\n            // Whitelist the liquidity manager\\r\\n            isWhitelisted[liquidityManager] = true;\\r\\n            emit AddressWhitelisted(liquidityManager, true);\\r\\n        }\\r\\n\\r\\n        // Whitelist the launch manager if provided and not already whitelisted\\r\\n        if (launchManager != address(0) && launchManager != liquidityManager) {\\r\\n            isWhitelisted[launchManager] = true;\\r\\n            emit AddressWhitelisted(launchManager, true);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function completeInitialDistribution() external {\\r\\n        require(\\r\\n            msg.sender == owner() || isWhitelisted[msg.sender],\\r\\n            \\\"Not authorized\\\"\\r\\n        );\\r\\n        require(\\r\\n            !_initialDistributionComplete,\\r\\n            \\\"Initial distribution already completed\\\"\\r\\n        );\\r\\n        _initialDistributionComplete = true;\\r\\n        emit InitialDistributionComplete();\\r\\n    }\\r\\n\\r\\n    function enableTrading() external onlyOwner {\\r\\n        require(!tradingEnabled, \\\"Trading already enabled\\\");\\r\\n        tradingEnabled = true;\\r\\n        launchTime = block.timestamp;\\r\\n        launchBlock = block.number;\\r\\n        emit TradingEnabled(launchTime);\\r\\n    }\\r\\n\\r\\n    function whitelistAddress(address account, bool status) public onlyOwner {\\r\\n        isWhitelisted[account] = status;\\r\\n        emit AddressWhitelisted(account, status);\\r\\n    }\\r\\n\\r\\n    function approveLiquidityManager(\\r\\n        address liquidityManager,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        require(\\r\\n            liquidityManager != address(0),\\r\\n            \\\"Invalid liquidityManager address\\\"\\r\\n        );\\r\\n        _approve(msg.sender, liquidityManager, amount);\\r\\n        emit LiquidityApproved(liquidityManager, amount);\\r\\n    }\\r\\n\\r\\n    function approveLaunchManager(\\r\\n        address launchManager,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        require(launchManager != address(0), \\\"Invalid launchManager address\\\");\\r\\n        _approve(msg.sender, launchManager, amount);\\r\\n        emit LaunchManagerApproved(launchManager, amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x06a09d6159f3f4106debec31a7e64217f939ac3d6e38706df4312e6175eb953d\",\"license\":\"MIT\"},\"contracts/interfaces/IToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\ninterface IToken {\\r\\n    function enableTrading() external;\\r\\n    function setAntiBotEnabled(bool enabled) external;\\r\\n    function setMaxTxAmount(uint256 amount) external;\\r\\n    function setMaxWalletAmount(uint256 amount) external;\\r\\n    function excludeFromLimits(address account, bool excluded) external;\\r\\n    function completeInitialDistribution() external;\\r\\n}\",\"keccak256\":\"0x0a2dfcc5916da4dc74408b1c2eb2eddb9d5ba226a9c62cc478a96aa911dd1bc1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080346100ce57601f61248438819003918201601f19168301916001600160401b038311848410176100d35780849260409485528339810103126100ce5780516001600160a01b0391828216918290036100ce57602001519033156100b55760005460018060a01b0319903382821617600055604051943391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600154161760015560025561239a90816100ea8239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60808060405260043610156200001457600080fd5b60003560e01c908163634282af14620009c4575080636fa23795146200096c578063715018a6146200090f57806374abfa54146200086d5780638da5cb5b1462000842578063b9032e961462000316578063c415b95c14620002eb578063c6d8a04a14620002ad578063d2c35ce814620001f1578063db3fa4cc1462000191578063dce0b4e41462000171578063e536266714620001515763f2fde38b14620000bc57600080fd5b346200014c5760203660031901126200014c57620000d962000a39565b620000e362000b35565b6001600160a01b039081169081156200013357600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b346200014c5760003660031901126200014c576020600454604051908152f35b346200014c5760003660031901126200014c576020600254604051908152f35b346200014c5760403660031901126200014c57620001ae62000a39565b6024359060018060a01b038091166000526003602052604060002080548310156200014c57602092620001e19162000a20565b90549060031b1c16604051908152f35b346200014c5760203660031901126200014c576200020e62000a39565b6200021862000b35565b6001600160a01b039081169081156200026857600154826001600160601b0360a01b821617600155167f5d16ad41baeb009cd23eb8f6c7cde5c2e0cd5acf4a33926ab488875c37c37f38600080a3005b60405162461bcd60e51b815260206004820152601960248201527f496e76616c696420636f6c6c6563746f722061646472657373000000000000006044820152606490fd5b346200014c5760203660031901126200014c576001600160a01b03620002d262000a39565b1660005260036020526020604060002054604051908152f35b346200014c5760003660031901126200014c576001546040516001600160a01b039091168152602090f35b6101203660031901126200014c5767ffffffffffffffff6004358181116200014c576200034890369060040162000acf565b906024358181116200014c576200036490369060040162000acf565b916064358281116200014c57366023820112156200014c5780600401356200038c8162000b1c565b916200039c604051938462000a8f565b8183526024602084019260051b820101903682116200014c57602401915b8183106200082057505050608435938385116200014c57366023860112156200014c57846004013592620003ee8462000b1c565b95620003fe604051978862000a8f565b848752602087016024819660051b830101913683116200014c57602401905b8282106200080f57505060a4359190506001600160a01b03821682036200014c5760c435926001600160a01b03841684036200014c5760e4359485151586036200014c5761010435906001600160a01b03821682036200014c576002543410620007d75780518a51036200079257604051988961178b8101109061178b8b0111176200075757620004e36200051593620004d060209661178b8d62000bda903961012061178b8e01818152019062000b62565b61178b8c01808203908801529062000b62565b60443561178b8b0160408101919091526001600160a01b03909316606084015282810360809093019290925262000a50565b9661178b8701880360a061178b89010152519687815201936000965b808810620007795750506001600160a01b0390811661178b860160c0810191909152911660e08201529015156101009091015281900391506000f080156200076d5733600090815260036020526040902080546001600160a01b0390921691680100000000000000009190828110156200075757620005b69160018201815562000a20565b81546001600160a01b0360039290921b91821b19169084901b1790556004549081101562000757576001810180600455811015620007415760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01816001600160601b0360a01b825416179055600080808060018060a01b0360015416600254905af16200064762000ba4565b5015620007065760025480341162000690575b6020826040518181527fd5f9bdf12adf29dab0248c349842c3822d53ae2bb4f36352f301630d018c8139833392a2604051908152f35b3403348111620006f057600080808093335af1620006ad62000ba4565b5015620006bb57816200065a565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6040513d6000823e3d90fd5b9094602080600192885181520196019701969062000531565b60405162461bcd60e51b815260206004820152601c60248201527f486f6c6465727320616e6420616d6f756e7473206d69736d61746368000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f496e73756666696369656e742066656560801b6044820152606490fd5b81358152602091820191016200041d565b82356001600160a01b03811681036200014c57815260209283019201620003ba565b346200014c5760003660031901126200014c576000546040516001600160a01b039091168152602090f35b346200014c576020806003193601126200014c576001600160a01b0390816200089562000a39565b16600052600381526040600020916040518093849184825491828152019160005284600020936000905b86838310620008f2578590620008d88287038362000a8f565b620008ee60405192828493845283019062000a50565b0390f35b8654821685526001968701968996509401939190910190620008bf565b346200014c5760003660031901126200014c576200092c62000b35565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346200014c5760203660031901126200014c577f5de302eeb1c80d4fb0c0953b692353f09ddf431411b8eb2034d5e857695619126040600435620009af62000b35565b600254908060025582519182526020820152a1005b346200014c5760203660031901126200014c57600435906004548210156200014c5760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b909101546001600160a01b03168152602090f35b8054821015620007415760005260206000200190600090565b600435906001600160a01b03821682036200014c57565b90815180825260208080930193019160005b82811062000a71575050505090565b83516001600160a01b03168552938101939281019260010162000a62565b90601f8019910116810190811067ffffffffffffffff8211176200075757604052565b67ffffffffffffffff81116200075757601f01601f191660200190565b81601f820112156200014c5780359062000ae98262000ab2565b9262000af9604051948562000a8f565b828452602083830101116200014c57816000926020809301838601378301015290565b67ffffffffffffffff8111620007575760051b60200190565b6000546001600160a01b0316330362000b4a57565b60405163118cdaa760e01b8152336004820152602490fd5b919082519283825260005b84811062000b8f575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520162000b6d565b3d1562000bd4573d9062000bb88262000ab2565b9162000bc8604051938462000a8f565b82523d6000602084013e565b60609056fe608060405234620008ac576200178b803803806200001d81620008dd565b92833981019061012081830312620008ac5780516001600160401b038111620008ac57826200004e91830162000903565b60208201519092906001600160401b038111620008ac57816200007391840162000903565b92604083015190620000886060850162000975565b60808501519094906001600160401b038111620008ac5781019184601f84011215620008ac57825192620000c6620000c0856200098a565b620008dd565b9360208086838152019160051b83010191878311620008ac57602001905b828210620008c25750505060a08201516001600160401b038111620008ac5782019480601f87011215620008ac57855162000123620000c0826200098a565b9660208089848152019260051b820101928311620008ac57602001905b828210620008b1575050506200015960c0830162000975565b966101006200016b60e0850162000975565b930151918215158303620008ac578051906001600160401b0382116200077e5760035490600182811c92168015620008a1575b60208310146200075d5781601f8493116200082f575b50602090601f8311600114620007a05760009262000794575b50508160011b916000199060031b1c1916176003555b8051906001600160401b0382116200077e5760045490600182811c9216801562000773575b60208310146200075d5781601f849311620006eb575b50602090601f8311600114620006605760009262000654575b50508160011b916000199060031b1c1916176004555b6001600160a01b038681169790949088156200063b57600580546001600160a01b031981168b17909155604051908a9088167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a38551885103620005f95750600a855111620005a9576009976000895560005b86518110156200034b5787620002da8289620009a2565b511615158062000335575b62000314575b6000198114620002fe57600101620002c3565b634e487b7160e01b600052601160045260246000fd5b6200032d62000324828b620009a2565b518b54620009cd565b8a55620002eb565b5062000342818a620009a2565b511515620002e5565b5088939496955089838554116200055a576200036a84600254620009cd565b600255806000526000602052604060002084815401905560007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020604051878152a38560055416600052600a60205260406000209560ff199660018882541617905580881697848915159788620004f3575b5050508216938462000462575b505050508162000456575b506200040c575b604051610cfa908162000a718239f35b81600052600a60205260016040600020918254161790557faf367c7d20ce5b2ab6da56afd0c9c39b00ba995263c60292a3e1ee3781fd4885602060405160018152a28080620003fc565b905082141583620003f5565b548303928311620002fe57826200049f85947f48eba0fc9bfd43465ccb41583e5c30f0a5f6eecfd2117414d95afaaefe38be3c94602094620009db565b604051908152a280600052600a6020526040600020600184825416179055807faf367c7d20ce5b2ab6da56afd0c9c39b00ba995263c60292a3e1ee3781fd4885602060405160018152a284808080620003ea565b156200052957620005059184620009db565b876000805160206200176b8339815191526020604051878152a25b888481620003dd565b508554620005389184620009db565b876000805160206200176b83398151915260208754604051908152a262000520565b60405162461bcd60e51b815260206004820152602160248201527f446973747269627574696f6e206578636565647320746f74616c20737570706c6044820152607960f81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f4d6178696d756d20313020696e697469616c20686f6c6465727320616c6c6f77604482015261195960f21b6064820152608490fd5b62461bcd60e51b815260206004820152601660248201527f417272617973206c656e677468206d69736d61746368000000000000000000006044820152606490fd5b604051631e4fbdf760e01b815260006004820152602490fd5b01519050388062000237565b600460009081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9350601f198516905b818110620006d25750908460019594939210620006b8575b505050811b016004556200024d565b015160001960f88460031b161c19169055388080620006a9565b9293602060018192878601518155019501930162000691565b60046000529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81016020851062000755575b90849392915b601f830160051c82018110620007455750506200021e565b600081558594506001016200072d565b508062000727565b634e487b7160e01b600052602260045260246000fd5b91607f169162000208565b634e487b7160e01b600052604160045260246000fd5b015190503880620001cd565b6003600090815293507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91905b601f198416851062000813576001945083601f19811610620007f9575b505050811b01600355620001e3565b015160001960f88460031b161c19169055388080620007ea565b81810151835560209485019460019093019290910190620007cd565b60036000529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c81016020851062000899575b90849392915b601f830160051c8201811062000889575050620001b4565b6000815585945060010162000871565b50806200086b565b91607f16916200019e565b600080fd5b815181526020918201910162000140565b60208091620008d18462000975565b815201910190620000e4565b6040519190601f01601f191682016001600160401b038111838210176200077e57604052565b919080601f84011215620008ac5782516001600160401b0381116200077e5760209062000939601f8201601f19168301620008dd565b92818452828287010111620008ac5760005b8181106200096157508260009394955001015290565b85810183015184820184015282016200094b565b51906001600160a01b0382168203620008ac57565b6001600160401b0381116200077e5760051b60200190565b8051821015620009b75760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b91908201809211620002fe57565b6001600160a01b0390811691821562000a57571691821562000a3e5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde03146109b857508063095ea7b31461098e57806318160ddd1461096f57806323b872dd1461087c578063313ce567146108605780633a1a8c91146107b45780633af32abf146107765780634ada218b1461074f57806367a80efd1461073057806370a08231146106f9578063715018a614610699578063790ca4131461067a5780638a8c523c146105c65780638da5cb5b1461059d57806395d89b411461047d578063a9059cbb1461044c578063b9a45aac146103ca578063bd20cb4e146102c7578063d00efb2f146102a8578063dd62ed3e1461025b578063f0a1b12c146101a75763f2fde38b1461011557600080fd5b346101a35760203660031901126101a35761012e610af6565b90610137610b27565b6001600160a01b0391821692831561018d575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5090346101a357806003193601126101a3576101c1610af6565b90602435916101ce610b27565b6001600160a01b038116938415610218575091602091610210827ff7fcef9d27f27936ac77bf8d525519fdfc6ceabfcb465dd65a68a3b38436248b9533610c31565b51908152a280f35b606490602084519162461bcd60e51b8352820152601d60248201527f496e76616c6964206c61756e63684d616e6167657220616464726573730000006044820152fd5b5050346102a457806003193601126102a45780602092610279610af6565b610281610b11565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5050346102a457816003193601126102a4576020906007549051908152f35b50346101a357826003193601126101a3576005546001600160a01b0316331480156103b5575b15610382576008549160ff83166103305760ff198316600117600855837e91797718383457eafcb8600ff903ce41cd8e28b20bc5a8df996532910b85dd8180a180f35b906020608492519162461bcd60e51b8352820152602660248201527f496e697469616c20646973747269627574696f6e20616c726561647920636f6d6044820152651c1b195d195960d21b6064820152fd5b6020606492519162461bcd60e51b8352820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152fd5b50338352600a60205260ff82842054166102ed565b5050346102a457806003193601126102a4576103e4610af6565b60243590811515809203610448577faf367c7d20ce5b2ab6da56afd0c9c39b00ba995263c60292a3e1ee3781fd48859160209161041f610b27565b6001600160a01b0316808652600a8352848620805460ff191660ff84161790559351908152a280f35b8380fd5b5050346102a457806003193601126102a45760209061047661046c610af6565b6024359033610b53565b5160018152f35b509190346102a457816003193601126102a457805190828454600181811c90808316928315610593575b602093848410811461058057838852908115610564575060011461050f575b505050829003601f01601f191682019267ffffffffffffffff8411838510176104fc57508291826104f8925282610aad565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b83851061055057505050508301013880806104c6565b80548886018301529301928490820161053a565b60ff1916878501525050151560051b84010190503880806104c6565b634e487b7160e01b895260228a52602489fd5b91607f16916104a7565b5050346102a457816003193601126102a45760055490516001600160a01b039091168152602090f35b50346101a357826003193601126101a3576105df610b27565b6005549060ff8260a01c16610637575060ff60a01b1916600160a01b176005554260068190554360075590519081527fb3da2db3dfc3778f99852546c6e9ab39ec253f9de7b0847afec61bd27878e92390602090a180f35b606490602084519162461bcd60e51b8352820152601760248201527f54726164696e6720616c726561647920656e61626c65640000000000000000006044820152fd5b5050346102a457816003193601126102a4576020906006549051908152f35b83346106f657806003193601126106f6576106b2610b27565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346102a45760203660031901126102a45760209181906001600160a01b03610721610af6565b16815280845220549051908152f35b5050346102a457816003193601126102a4576020906009549051908152f35b5050346102a457816003193601126102a45760209060ff60055460a01c1690519015158152f35b5050346102a45760203660031901126102a45760209160ff9082906001600160a01b036107a1610af6565b168152600a855220541690519015158152f35b5090346101a357806003193601126101a3576107ce610af6565b90602435916107db610b27565b6001600160a01b03811693841561081d575091602091610210827f48eba0fc9bfd43465ccb41583e5c30f0a5f6eecfd2117414d95afaaefe38be3c9533610c31565b606490602084519162461bcd60e51b8352820152602060248201527f496e76616c6964206c69717569646974794d616e6167657220616464726573736044820152fd5b5050346102a457816003193601126102a4576020905160128152f35b5082346106f65760603660031901126106f657610897610af6565b61089f610b11565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983106108db575b602088610476898989610b53565b86831061094357811561092c57331561091557508252600160209081528683203384528152918690209085900390558290610476876108cd565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346102a457816003193601126102a4576020906002549051908152f35b5050346102a457806003193601126102a4576020906104766109ae610af6565b6024359033610c31565b84915083346101a357826003193601126101a35782600354600181811c90808316928315610aa3575b602093848410811461058057838852908115610a875750600114610a3157505050829003601f01601f191682019267ffffffffffffffff8411838510176104fc57508291826104f8925282610aad565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b838510610a7357505050508301018580806104c6565b805488860183015293019284908201610a5d565b60ff1916878501525050151560051b84010190508580806104c6565b91607f16916109e1565b6020808252825181830181905290939260005b828110610ae257505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610ac0565b600435906001600160a01b0382168203610b0c57565b600080fd5b602435906001600160a01b0382168203610b0c57565b6005546001600160a01b03163303610b3b57565b60405163118cdaa760e01b8152336004820152602490fd5b916001600160a01b03808416928315610c185716928315610bff5760009083825281602052604082205490838210610bcd575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6001600160a01b03908116918215610cab5716918215610c925760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fdfea2646970667358221220ce241fff66f980ae1c0704a35015f1373bda3148469287f3cc369f0b3871ce5a64736f6c63430008140033f7fcef9d27f27936ac77bf8d525519fdfc6ceabfcb465dd65a68a3b38436248ba2646970667358221220735526679382b855f583d66ea6566db22a67c31844e0bcb0ad5625fa746f4b6164736f6c63430008140033",
  "deployedBytecode": "0x60808060405260043610156200001457600080fd5b60003560e01c908163634282af14620009c4575080636fa23795146200096c578063715018a6146200090f57806374abfa54146200086d5780638da5cb5b1462000842578063b9032e961462000316578063c415b95c14620002eb578063c6d8a04a14620002ad578063d2c35ce814620001f1578063db3fa4cc1462000191578063dce0b4e41462000171578063e536266714620001515763f2fde38b14620000bc57600080fd5b346200014c5760203660031901126200014c57620000d962000a39565b620000e362000b35565b6001600160a01b039081169081156200013357600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b346200014c5760003660031901126200014c576020600454604051908152f35b346200014c5760003660031901126200014c576020600254604051908152f35b346200014c5760403660031901126200014c57620001ae62000a39565b6024359060018060a01b038091166000526003602052604060002080548310156200014c57602092620001e19162000a20565b90549060031b1c16604051908152f35b346200014c5760203660031901126200014c576200020e62000a39565b6200021862000b35565b6001600160a01b039081169081156200026857600154826001600160601b0360a01b821617600155167f5d16ad41baeb009cd23eb8f6c7cde5c2e0cd5acf4a33926ab488875c37c37f38600080a3005b60405162461bcd60e51b815260206004820152601960248201527f496e76616c696420636f6c6c6563746f722061646472657373000000000000006044820152606490fd5b346200014c5760203660031901126200014c576001600160a01b03620002d262000a39565b1660005260036020526020604060002054604051908152f35b346200014c5760003660031901126200014c576001546040516001600160a01b039091168152602090f35b6101203660031901126200014c5767ffffffffffffffff6004358181116200014c576200034890369060040162000acf565b906024358181116200014c576200036490369060040162000acf565b916064358281116200014c57366023820112156200014c5780600401356200038c8162000b1c565b916200039c604051938462000a8f565b8183526024602084019260051b820101903682116200014c57602401915b8183106200082057505050608435938385116200014c57366023860112156200014c57846004013592620003ee8462000b1c565b95620003fe604051978862000a8f565b848752602087016024819660051b830101913683116200014c57602401905b8282106200080f57505060a4359190506001600160a01b03821682036200014c5760c435926001600160a01b03841684036200014c5760e4359485151586036200014c5761010435906001600160a01b03821682036200014c576002543410620007d75780518a51036200079257604051988961178b8101109061178b8b0111176200075757620004e36200051593620004d060209661178b8d62000bda903961012061178b8e01818152019062000b62565b61178b8c01808203908801529062000b62565b60443561178b8b0160408101919091526001600160a01b03909316606084015282810360809093019290925262000a50565b9661178b8701880360a061178b89010152519687815201936000965b808810620007795750506001600160a01b0390811661178b860160c0810191909152911660e08201529015156101009091015281900391506000f080156200076d5733600090815260036020526040902080546001600160a01b0390921691680100000000000000009190828110156200075757620005b69160018201815562000a20565b81546001600160a01b0360039290921b91821b19169084901b1790556004549081101562000757576001810180600455811015620007415760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01816001600160601b0360a01b825416179055600080808060018060a01b0360015416600254905af16200064762000ba4565b5015620007065760025480341162000690575b6020826040518181527fd5f9bdf12adf29dab0248c349842c3822d53ae2bb4f36352f301630d018c8139833392a2604051908152f35b3403348111620006f057600080808093335af1620006ad62000ba4565b5015620006bb57816200065a565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6040513d6000823e3d90fd5b9094602080600192885181520196019701969062000531565b60405162461bcd60e51b815260206004820152601c60248201527f486f6c6465727320616e6420616d6f756e7473206d69736d61746368000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f496e73756666696369656e742066656560801b6044820152606490fd5b81358152602091820191016200041d565b82356001600160a01b03811681036200014c57815260209283019201620003ba565b346200014c5760003660031901126200014c576000546040516001600160a01b039091168152602090f35b346200014c576020806003193601126200014c576001600160a01b0390816200089562000a39565b16600052600381526040600020916040518093849184825491828152019160005284600020936000905b86838310620008f2578590620008d88287038362000a8f565b620008ee60405192828493845283019062000a50565b0390f35b8654821685526001968701968996509401939190910190620008bf565b346200014c5760003660031901126200014c576200092c62000b35565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346200014c5760203660031901126200014c577f5de302eeb1c80d4fb0c0953b692353f09ddf431411b8eb2034d5e857695619126040600435620009af62000b35565b600254908060025582519182526020820152a1005b346200014c5760203660031901126200014c57600435906004548210156200014c5760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b909101546001600160a01b03168152602090f35b8054821015620007415760005260206000200190600090565b600435906001600160a01b03821682036200014c57565b90815180825260208080930193019160005b82811062000a71575050505090565b83516001600160a01b03168552938101939281019260010162000a62565b90601f8019910116810190811067ffffffffffffffff8211176200075757604052565b67ffffffffffffffff81116200075757601f01601f191660200190565b81601f820112156200014c5780359062000ae98262000ab2565b9262000af9604051948562000a8f565b828452602083830101116200014c57816000926020809301838601378301015290565b67ffffffffffffffff8111620007575760051b60200190565b6000546001600160a01b0316330362000b4a57565b60405163118cdaa760e01b8152336004820152602490fd5b919082519283825260005b84811062000b8f575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520162000b6d565b3d1562000bd4573d9062000bb88262000ab2565b9162000bc8604051938462000a8f565b82523d6000602084013e565b60609056fe608060405234620008ac576200178b803803806200001d81620008dd565b92833981019061012081830312620008ac5780516001600160401b038111620008ac57826200004e91830162000903565b60208201519092906001600160401b038111620008ac57816200007391840162000903565b92604083015190620000886060850162000975565b60808501519094906001600160401b038111620008ac5781019184601f84011215620008ac57825192620000c6620000c0856200098a565b620008dd565b9360208086838152019160051b83010191878311620008ac57602001905b828210620008c25750505060a08201516001600160401b038111620008ac5782019480601f87011215620008ac57855162000123620000c0826200098a565b9660208089848152019260051b820101928311620008ac57602001905b828210620008b1575050506200015960c0830162000975565b966101006200016b60e0850162000975565b930151918215158303620008ac578051906001600160401b0382116200077e5760035490600182811c92168015620008a1575b60208310146200075d5781601f8493116200082f575b50602090601f8311600114620007a05760009262000794575b50508160011b916000199060031b1c1916176003555b8051906001600160401b0382116200077e5760045490600182811c9216801562000773575b60208310146200075d5781601f849311620006eb575b50602090601f8311600114620006605760009262000654575b50508160011b916000199060031b1c1916176004555b6001600160a01b038681169790949088156200063b57600580546001600160a01b031981168b17909155604051908a9088167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a38551885103620005f95750600a855111620005a9576009976000895560005b86518110156200034b5787620002da8289620009a2565b511615158062000335575b62000314575b6000198114620002fe57600101620002c3565b634e487b7160e01b600052601160045260246000fd5b6200032d62000324828b620009a2565b518b54620009cd565b8a55620002eb565b5062000342818a620009a2565b511515620002e5565b5088939496955089838554116200055a576200036a84600254620009cd565b600255806000526000602052604060002084815401905560007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020604051878152a38560055416600052600a60205260406000209560ff199660018882541617905580881697848915159788620004f3575b5050508216938462000462575b505050508162000456575b506200040c575b604051610cfa908162000a718239f35b81600052600a60205260016040600020918254161790557faf367c7d20ce5b2ab6da56afd0c9c39b00ba995263c60292a3e1ee3781fd4885602060405160018152a28080620003fc565b905082141583620003f5565b548303928311620002fe57826200049f85947f48eba0fc9bfd43465ccb41583e5c30f0a5f6eecfd2117414d95afaaefe38be3c94602094620009db565b604051908152a280600052600a6020526040600020600184825416179055807faf367c7d20ce5b2ab6da56afd0c9c39b00ba995263c60292a3e1ee3781fd4885602060405160018152a284808080620003ea565b156200052957620005059184620009db565b876000805160206200176b8339815191526020604051878152a25b888481620003dd565b508554620005389184620009db565b876000805160206200176b83398151915260208754604051908152a262000520565b60405162461bcd60e51b815260206004820152602160248201527f446973747269627574696f6e206578636565647320746f74616c20737570706c6044820152607960f81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f4d6178696d756d20313020696e697469616c20686f6c6465727320616c6c6f77604482015261195960f21b6064820152608490fd5b62461bcd60e51b815260206004820152601660248201527f417272617973206c656e677468206d69736d61746368000000000000000000006044820152606490fd5b604051631e4fbdf760e01b815260006004820152602490fd5b01519050388062000237565b600460009081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9350601f198516905b818110620006d25750908460019594939210620006b8575b505050811b016004556200024d565b015160001960f88460031b161c19169055388080620006a9565b9293602060018192878601518155019501930162000691565b60046000529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81016020851062000755575b90849392915b601f830160051c82018110620007455750506200021e565b600081558594506001016200072d565b508062000727565b634e487b7160e01b600052602260045260246000fd5b91607f169162000208565b634e487b7160e01b600052604160045260246000fd5b015190503880620001cd565b6003600090815293507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91905b601f198416851062000813576001945083601f19811610620007f9575b505050811b01600355620001e3565b015160001960f88460031b161c19169055388080620007ea565b81810151835560209485019460019093019290910190620007cd565b60036000529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c81016020851062000899575b90849392915b601f830160051c8201811062000889575050620001b4565b6000815585945060010162000871565b50806200086b565b91607f16916200019e565b600080fd5b815181526020918201910162000140565b60208091620008d18462000975565b815201910190620000e4565b6040519190601f01601f191682016001600160401b038111838210176200077e57604052565b919080601f84011215620008ac5782516001600160401b0381116200077e5760209062000939601f8201601f19168301620008dd565b92818452828287010111620008ac5760005b8181106200096157508260009394955001015290565b85810183015184820184015282016200094b565b51906001600160a01b0382168203620008ac57565b6001600160401b0381116200077e5760051b60200190565b8051821015620009b75760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b91908201809211620002fe57565b6001600160a01b0390811691821562000a57571691821562000a3e5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde03146109b857508063095ea7b31461098e57806318160ddd1461096f57806323b872dd1461087c578063313ce567146108605780633a1a8c91146107b45780633af32abf146107765780634ada218b1461074f57806367a80efd1461073057806370a08231146106f9578063715018a614610699578063790ca4131461067a5780638a8c523c146105c65780638da5cb5b1461059d57806395d89b411461047d578063a9059cbb1461044c578063b9a45aac146103ca578063bd20cb4e146102c7578063d00efb2f146102a8578063dd62ed3e1461025b578063f0a1b12c146101a75763f2fde38b1461011557600080fd5b346101a35760203660031901126101a35761012e610af6565b90610137610b27565b6001600160a01b0391821692831561018d575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5090346101a357806003193601126101a3576101c1610af6565b90602435916101ce610b27565b6001600160a01b038116938415610218575091602091610210827ff7fcef9d27f27936ac77bf8d525519fdfc6ceabfcb465dd65a68a3b38436248b9533610c31565b51908152a280f35b606490602084519162461bcd60e51b8352820152601d60248201527f496e76616c6964206c61756e63684d616e6167657220616464726573730000006044820152fd5b5050346102a457806003193601126102a45780602092610279610af6565b610281610b11565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5050346102a457816003193601126102a4576020906007549051908152f35b50346101a357826003193601126101a3576005546001600160a01b0316331480156103b5575b15610382576008549160ff83166103305760ff198316600117600855837e91797718383457eafcb8600ff903ce41cd8e28b20bc5a8df996532910b85dd8180a180f35b906020608492519162461bcd60e51b8352820152602660248201527f496e697469616c20646973747269627574696f6e20616c726561647920636f6d6044820152651c1b195d195960d21b6064820152fd5b6020606492519162461bcd60e51b8352820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152fd5b50338352600a60205260ff82842054166102ed565b5050346102a457806003193601126102a4576103e4610af6565b60243590811515809203610448577faf367c7d20ce5b2ab6da56afd0c9c39b00ba995263c60292a3e1ee3781fd48859160209161041f610b27565b6001600160a01b0316808652600a8352848620805460ff191660ff84161790559351908152a280f35b8380fd5b5050346102a457806003193601126102a45760209061047661046c610af6565b6024359033610b53565b5160018152f35b509190346102a457816003193601126102a457805190828454600181811c90808316928315610593575b602093848410811461058057838852908115610564575060011461050f575b505050829003601f01601f191682019267ffffffffffffffff8411838510176104fc57508291826104f8925282610aad565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b83851061055057505050508301013880806104c6565b80548886018301529301928490820161053a565b60ff1916878501525050151560051b84010190503880806104c6565b634e487b7160e01b895260228a52602489fd5b91607f16916104a7565b5050346102a457816003193601126102a45760055490516001600160a01b039091168152602090f35b50346101a357826003193601126101a3576105df610b27565b6005549060ff8260a01c16610637575060ff60a01b1916600160a01b176005554260068190554360075590519081527fb3da2db3dfc3778f99852546c6e9ab39ec253f9de7b0847afec61bd27878e92390602090a180f35b606490602084519162461bcd60e51b8352820152601760248201527f54726164696e6720616c726561647920656e61626c65640000000000000000006044820152fd5b5050346102a457816003193601126102a4576020906006549051908152f35b83346106f657806003193601126106f6576106b2610b27565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346102a45760203660031901126102a45760209181906001600160a01b03610721610af6565b16815280845220549051908152f35b5050346102a457816003193601126102a4576020906009549051908152f35b5050346102a457816003193601126102a45760209060ff60055460a01c1690519015158152f35b5050346102a45760203660031901126102a45760209160ff9082906001600160a01b036107a1610af6565b168152600a855220541690519015158152f35b5090346101a357806003193601126101a3576107ce610af6565b90602435916107db610b27565b6001600160a01b03811693841561081d575091602091610210827f48eba0fc9bfd43465ccb41583e5c30f0a5f6eecfd2117414d95afaaefe38be3c9533610c31565b606490602084519162461bcd60e51b8352820152602060248201527f496e76616c6964206c69717569646974794d616e6167657220616464726573736044820152fd5b5050346102a457816003193601126102a4576020905160128152f35b5082346106f65760603660031901126106f657610897610af6565b61089f610b11565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983106108db575b602088610476898989610b53565b86831061094357811561092c57331561091557508252600160209081528683203384528152918690209085900390558290610476876108cd565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346102a457816003193601126102a4576020906002549051908152f35b5050346102a457806003193601126102a4576020906104766109ae610af6565b6024359033610c31565b84915083346101a357826003193601126101a35782600354600181811c90808316928315610aa3575b602093848410811461058057838852908115610a875750600114610a3157505050829003601f01601f191682019267ffffffffffffffff8411838510176104fc57508291826104f8925282610aad565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b838510610a7357505050508301018580806104c6565b805488860183015293019284908201610a5d565b60ff1916878501525050151560051b84010190508580806104c6565b91607f16916109e1565b6020808252825181830181905290939260005b828110610ae257505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610ac0565b600435906001600160a01b0382168203610b0c57565b600080fd5b602435906001600160a01b0382168203610b0c57565b6005546001600160a01b03163303610b3b57565b60405163118cdaa760e01b8152336004820152602490fd5b916001600160a01b03808416928315610c185716928315610bff5760009083825281602052604082205490838210610bcd575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6001600160a01b03908116918215610cab5716918215610c925760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fdfea2646970667358221220ce241fff66f980ae1c0704a35015f1373bda3148469287f3cc369f0b3871ce5a64736f6c63430008140033f7fcef9d27f27936ac77bf8d525519fdfc6ceabfcb465dd65a68a3b38436248ba2646970667358221220735526679382b855f583d66ea6566db22a67c31844e0bcb0ad5625fa746f4b6164736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/core/TokenFactory.sol:TokenFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1521,
        "contract": "contracts/core/TokenFactory.sol:TokenFactory",
        "label": "feeCollector",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1523,
        "contract": "contracts/core/TokenFactory.sol:TokenFactory",
        "label": "creationFee",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1528,
        "contract": "contracts/core/TokenFactory.sol:TokenFactory",
        "label": "creatorTokens",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 1531,
        "contract": "contracts/core/TokenFactory.sol:TokenFactory",
        "label": "allTokens",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}