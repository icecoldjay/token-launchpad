{
  "address": "0x25E87fD2925cBe06EC0765b2db57Fdd78BfCdB74",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bundleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "transactionCount",
          "type": "uint256"
        }
      ],
      "name": "BundleExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "bundleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "TransactionFailed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct TransactionBundler.Transaction[]",
          "name": "transactions",
          "type": "tuple[]"
        }
      ],
      "name": "executeBundle",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2ae6f8d7b36726c3dda5a5ae990c0eeb207e2dbb236a86307b2865de7b5b6b37",
  "receipt": {
    "to": null,
    "from": "0xb799B0857C48f96E24e4295FD961043856b847eB",
    "contractAddress": "0x25E87fD2925cBe06EC0765b2db57Fdd78BfCdB74",
    "transactionIndex": 84,
    "gasUsed": "401514",
    "logsBloom": "0x
    "blockHash": "0x4aff753db9ddeae8013f1c78fceac7f4eb1618dcb20261a6fe6bea4c1a08a58a",
    "transactionHash": "0x2ae6f8d7b36726c3dda5a5ae990c0eeb207e2dbb236a86307b2865de7b5b6b37",
    "logs": [
      {
        "transactionIndex": 84,
        "blockNumber": 8259065,
        "transactionHash": "0x2ae6f8d7b36726c3dda5a5ae990c0eeb207e2dbb236a86307b2865de7b5b6b37",
        "address": "0x25E87fD2925cBe06EC0765b2db57Fdd78BfCdB74",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b799b0857c48f96e24e4295fd961043856b847eb"
        ],
        "data": "0x",
        "logIndex": 196,
        "blockHash": "0x4aff753db9ddeae8013f1c78fceac7f4eb1618dcb20261a6fe6bea4c1a08a58a"
      }
    ],
    "blockNumber": 8259065,
    "cumulativeGasUsed": "10140642",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xb799B0857C48f96E24e4295FD961043856b847eB"
  ],
  "numDeployments": 3,
  "solcInputHash": "17f42686fb9b765a49a80cf6e8115fb8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bundleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transactionCount\",\"type\":\"uint256\"}],\"name\":\"BundleExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bundleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"transactionIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"TransactionFailed\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct TransactionBundler.Transaction[]\",\"name\":\"transactions\",\"type\":\"tuple[]\"}],\"name\":\"executeBundle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extensions/TransactionBundler.sol\":\"TransactionBundler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/extensions/TransactionBundler.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TransactionBundler is Ownable {\\r\\n\\r\\n    struct Transaction {\\r\\n        address target;\\r\\n        uint256 value;\\r\\n        bytes data;\\r\\n    }\\r\\n    \\r\\n    event BundleExecuted(uint256 indexed bundleId, address indexed executor, uint256 transactionCount);\\r\\n    event TransactionFailed(uint256 indexed bundleId, uint256 indexed transactionIndex, bytes reason);\\r\\n   \\r\\n    constructor(address _initialOwner) Ownable(_initialOwner) {}\\r\\n   \\r\\n    // Execute multiple transactions atomically\\r\\n    function executeBundle(Transaction[] calldata transactions) external payable returns (bool) {\\r\\n        uint256 bundleId = uint256(keccak256(abi.encode(transactions, block.timestamp)));\\r\\n       \\r\\n        for (uint256 i = 0; i < transactions.length; i++) {\\r\\n            Transaction calldata txn = transactions[i];\\r\\n            (bool success, bytes memory returnData) = txn.target.call{value: txn.value}(txn.data);\\r\\n            \\r\\n            if (!success) {\\r\\n                // Emit detailed error information\\r\\n                emit TransactionFailed(bundleId, i, returnData);\\r\\n                revert(string(returnData));\\r\\n            }\\r\\n        }\\r\\n       \\r\\n        // Refund any remaining ETH\\r\\n        if (address(this).balance > 0) {\\r\\n            (bool sent, ) = msg.sender.call{value: address(this).balance}(\\\"\\\");\\r\\n            require(sent, \\\"ETH refund failed\\\");\\r\\n        }\\r\\n       \\r\\n        emit BundleExecuted(bundleId, msg.sender, transactions.length);\\r\\n        return true;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xcfe776e4232bac4d943bdd29d0731151ec6bffe3bfe85dca7c86f4065d1057f4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080346100bb57601f6106a638819003918201601f19168301916001600160401b038311848410176100c0578084926020946040528339810103126100bb57516001600160a01b0390818116908190036100bb5780156100a257600080546001600160a01b03198116831782556040519316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36105cf90816100d78239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c8063715018a61461045c5780638da5cb5b146104335780639273f32e146100dd5763f2fde38b1461004857600080fd5b346100d85760203660031901126100d8576004356001600160a01b03818116918290036100d8576100776104b5565b81156100bf57600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b60203660031901126100d85767ffffffffffffffff600435116100d8573660236004350112156100d85767ffffffffffffffff60043560040135116100d8576004356004013560051b366024826004350101116100d857604051906060820160406020840152600435600401359052816080808201928201016024600435019260005b600435600401358110610353575050610188925042604083015203601f1981018352826104e1565b6020815191012060005b6004356004013581106102335750476101e4575b604051906004356004013582527fe1d8ab19187a36b71cfdb0b98d1a5b58355cb0fe493d79ba4429c24cc42001e560203393a3602060405160018152f35b600080808047335af16101f5610519565b506101a65760405162461bcd60e51b8152602060048201526011602482015270115512081c99599d5b990819985a5b1959607a1b6044820152606490fd5b60248160051b6004350101356082196004353603018112156100d8576004350160248101356001600160a01b03811681036100d8576064820135604219833603018112156100d857820191602483013567ffffffffffffffff81116100d85760448094019281360384136100d8576000948594836040519485928337810186815203930135905af16102c3610519565b90156102f1575060001981146102db57600101610192565b634e487b7160e01b600052601160045260246000fd5b9061034f927f2b461463d8cd2868d1b4b52ce6107af08727663eb8bfe1a6b9f610931287f030604051602081528061032c6020820187610559565b0390a360405162461bcd60e51b8152602060048201529182916024830190610559565b0390fd5b858303607f19018252909250908335906004353603608219018212156100d8576004358201602401356001600160a01b03811681036100d8576001600160a01b0316815260043582016044818101356020840152926064820135913603604219018212156100d857600435010167ffffffffffffffff6024820135116100d85760248101353603838201136100d85760808260209392600195606060408796015260248201356060840152602482013590820184840137600083602483013584010152601f60248119920135011601019501930191019084929391610160565b346100d85760003660031901126100d8576000546040516001600160a01b039091168152602090f35b346100d85760003660031901126100d8576104756104b5565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b6000546001600160a01b031633036104c957565b60405163118cdaa760e01b8152336004820152602490fd5b90601f8019910116810190811067ffffffffffffffff82111761050357604052565b634e487b7160e01b600052604160045260246000fd5b3d15610554573d9067ffffffffffffffff82116105035760405191610548601f8201601f1916602001846104e1565b82523d6000602084013e565b606090565b919082519283825260005b848110610585575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161056456fea264697066735822122035d08fe90545efdd4ceaee50a674a2af3a4e063e65acfbeaeb783b8574763f6464736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b60003560e01c8063715018a61461045c5780638da5cb5b146104335780639273f32e146100dd5763f2fde38b1461004857600080fd5b346100d85760203660031901126100d8576004356001600160a01b03818116918290036100d8576100776104b5565b81156100bf57600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b60203660031901126100d85767ffffffffffffffff600435116100d8573660236004350112156100d85767ffffffffffffffff60043560040135116100d8576004356004013560051b366024826004350101116100d857604051906060820160406020840152600435600401359052816080808201928201016024600435019260005b600435600401358110610353575050610188925042604083015203601f1981018352826104e1565b6020815191012060005b6004356004013581106102335750476101e4575b604051906004356004013582527fe1d8ab19187a36b71cfdb0b98d1a5b58355cb0fe493d79ba4429c24cc42001e560203393a3602060405160018152f35b600080808047335af16101f5610519565b506101a65760405162461bcd60e51b8152602060048201526011602482015270115512081c99599d5b990819985a5b1959607a1b6044820152606490fd5b60248160051b6004350101356082196004353603018112156100d8576004350160248101356001600160a01b03811681036100d8576064820135604219833603018112156100d857820191602483013567ffffffffffffffff81116100d85760448094019281360384136100d8576000948594836040519485928337810186815203930135905af16102c3610519565b90156102f1575060001981146102db57600101610192565b634e487b7160e01b600052601160045260246000fd5b9061034f927f2b461463d8cd2868d1b4b52ce6107af08727663eb8bfe1a6b9f610931287f030604051602081528061032c6020820187610559565b0390a360405162461bcd60e51b8152602060048201529182916024830190610559565b0390fd5b858303607f19018252909250908335906004353603608219018212156100d8576004358201602401356001600160a01b03811681036100d8576001600160a01b0316815260043582016044818101356020840152926064820135913603604219018212156100d857600435010167ffffffffffffffff6024820135116100d85760248101353603838201136100d85760808260209392600195606060408796015260248201356060840152602482013590820184840137600083602483013584010152601f60248119920135011601019501930191019084929391610160565b346100d85760003660031901126100d8576000546040516001600160a01b039091168152602090f35b346100d85760003660031901126100d8576104756104b5565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b6000546001600160a01b031633036104c957565b60405163118cdaa760e01b8152336004820152602490fd5b90601f8019910116810190811067ffffffffffffffff82111761050357604052565b634e487b7160e01b600052604160045260246000fd5b3d15610554573d9067ffffffffffffffff82116105035760405191610548601f8201601f1916602001846104e1565b82523d6000602084013e565b606090565b919082519283825260005b848110610585575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161056456fea264697066735822122035d08fe90545efdd4ceaee50a674a2af3a4e063e65acfbeaeb783b8574763f6464736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 387,
        "contract": "contracts/extensions/TransactionBundler.sol:TransactionBundler",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}